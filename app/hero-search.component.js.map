{"version":3,"file":"hero-search.component.js","sourceRoot":"","sources":["hero-search.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,wBAAwB,cAAc,CAAC,CAAA;AAEvC,oCAAkC,uBAAuB,CAAC,CAAA;AAW1D;IAIE,6BACU,iBAAoC,EACpC,MAAc;QADd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAJhB,gBAAW,GAAG,IAAI,iBAAO,EAAU,CAAC;IAK5C,CAAC;IAED,iDAAiD;IACjD,oCAAM,GAAN,UAAO,IAAY;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW;aAC3B,YAAY,CAAC,GAAG,CAAC,CAAO,iCAAiC;aACzD,oBAAoB,EAAE,CAAE,iDAAiD;aACzE,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAE,qCAAqC;cAE1D,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC;cAEnC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,EAJV,CAIU,CAC5B,CAAC,KAAK,CAAC,UAAA,KAAK;YACX,4BAA4B;YAC5B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,IAAI,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAxCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAE,2BAA2B,CAAE;YAC1C,SAAS,EAAE,CAAC,uCAAiB,CAAC;SAC/B,CAAC;;2BAAA;IAoCF,0BAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,2BAAmB,sBAmC/B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { HeroSearchService } from './hero-search.service';\r\nimport { Hero } from './hero';\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'hero-search',\r\n  templateUrl: 'hero-search.component.html',\r\n  styleUrls: [ 'hero-search.component.css' ],\r\n  providers: [HeroSearchService]\r\n})\r\nexport class HeroSearchComponent implements OnInit {\r\n  heroes: Observable<Hero[]>;\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(\r\n    private heroSearchService: HeroSearchService,\r\n    private router: Router) {\r\n  }\r\n\r\n  // Push a search term into the observable stream.\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.heroes = this.searchTerms\r\n      .debounceTime(300)       // wait for 300ms pause in events\r\n      .distinctUntilChanged()  // ignore if next search term is same as previous\r\n      .switchMap(term => term  // switch to new observable each time\r\n        // return the http search observable\r\n        ? this.heroSearchService.search(term)\r\n        // or the observable of empty heroes if no search term\r\n        : Observable.of<Hero[]>([])\r\n      ).catch(error => {\r\n        // TODO: real error handling\r\n        console.log(error);\r\n        return Observable.of<Hero[]>([]);\r\n      });\r\n  }\r\n\r\n  gotoDetail(hero: Hero): void {\r\n    let link = ['/detail', hero.id];\r\n    this.router.navigate(link);\r\n  }\r\n\r\n}"]}